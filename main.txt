Cоздайте папку first-project и сделайте её Git-репозиторием: перейдите в неё с помощью команды cd и выполните 
git init.

«Разгитить» папку, если что-то пошло не так 
rm -rf .git

-ключ -r (от англ. recursive — «рекурсивно») позволяет удалять папки вместе с их содержимым;
-ключ -f (от англ. force — «заставить») избавит вас от вопросов вроде «Вы точно хотите удалить этот файл? А этот? И этот тоже?».

Проверить состояние репозитория:
git status

Подготовить файлы к сохранению — 
git add
-Ключ, или флаг, --all позволяет подготовить к сохранению все файлы в репозитории.
-Также можно добавить текущую папку целиком — в этом случае все файлы в ней тоже будут добавлены. Обратиться к текущей папке в Bash позволяет точка (.).

Если файл изменить после git add, он получает статус modified, для добавление в трек нужно снова выполнить git add.

Сделать коммит можно командой git commit c ключом -m (от англ. message — «сообщение»), который присваивает коммиту сообщение.
 git commit -m  "Описание коммита"

Просмотреть историю коммитов — git log
git log


Генерируем SSH-ключ

$ cd ~ # перешли в домашнюю директорию 
$ ls -la .ssh/ # вывели список созданных ключей 
$ ssh-keygen -t rsa -b 4096 -C "электронная почта, к которой привязан ваш аккаунт на GitHub"


Для Windows три раза нажать enter:
> Enter a file in which to save the key (C:\Users\<имя_пользователя>\.ssh\):[Press enter]
> Enter passphrase (empty for no passphrase): [Type a passphrase]
> Enter same passphrase again: [Type passphrase again] 

Для Mac то же самое, но немного иначе.

ls -a ~/.ssh 
На экране должны появиться два файла — один с расширением .pub, другой — без. Файл в .pub — публичный, им можно делиться с веб-сайтами или коллегами. Файл без расширения .pub — приватный. Ни в коем случае не передавайте его никому!
 
Для Windows:

# скопировать содержимое ключа в буфер обмена:
$ clip < ~/.ssh/id_rsa.pub

Перейдите на GitHub и выберите пункт Settings (англ. «настройки») в меню аккаунта.
В меню слева нажмите на пункт SSH and GPG keys.
В открывшейся вкладке выберите New SSH key (англ. «новый SSH-ключ»).
В поле Title (англ. «заголовок») напишите название ключа. Например, Personal key (англ. «личный ключ»).
В поле Key type (англ. «тип ключа») должно быть Authentication Key (англ. «ключ аутентификации»).
В поле Key скопируйте ваш ключ из буфера обмена.

Проверьте правильность ключа с помощью следующей команды.

$ ssh -T git@github.com 

Если это первый раз, когда вы используете Git, чтобы поделиться проектом на GitHub, появится похожее предупреждение.
Введите yes, чтобы продолжить. Вы увидите приветствие на экране.


Откройте консоль, перейдите в каталог локального репозитория и введите команду git remote add. URL вы скопировали со страницы удалённого репозитория.
$ git remote add origin git@github.com:%ИМЯ_АККАУНТА%/first-project.git 

Убедиться, что репозитории связаны, — git remote -v
git remote -v

Отправить изменения на удалённый репозиторий — git push
git push

В первый раз эту команду нужно вызвать с флагом -u и параметрами origin (имя удалённого репозитория) и main или master (название текущей ветки). Флаг -u свяжет локальную ветку с одноимённой удалённой.
$ git push -u origin main # Если команда приведёт к ошибке, попробуйте заменить main на master. 

В дальнейшем при работе с удалённым репозиторием флаг -u можно опустить и писать просто git push.







